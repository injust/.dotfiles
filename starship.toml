# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Insert $fill and trailing space before $line_break
# Move less important modules to the right prompt
format = """\
$username\
$hostname\
$localip\
$shlvl\
$singularity\
$kubernetes\
$directory\
$vcsh\
$fossil_branch\
$fossil_metrics\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
$pijul_channel\
$docker_context\
$fill \
$all\
$line_break\
$jobs\
$battery\
$time\
$status\
$os\
$container\
$shell\
$character\
"""

[fill]
symbol = '·'
style = '238'

[aws]
symbol = "  "

[buf]
format = '(with [$symbol$version ]($style))'
symbol = " "

[bun]
format = '(via [$symbol($version )]($style))'

[c]
format = '(via [$symbol($version(-$name) )]($style))'
symbol = " "

[cmake]
format = '(via [$symbol($version )]($style))'

[cobol]
format = '(via [$symbol($version )]($style))'

[conda]
symbol = " "

[crystal]
format = '(via [$symbol($version )]($style))'
symbol = " "

[daml]
format = '(via [$symbol($version )]($style))'

[dart]
format = '(via [$symbol($version )]($style))'
symbol = " "

[deno]
format = '(via [$symbol($version )]($style))'

[directory]
read_only = " 󰌾"

[docker_context]
symbol = " "

[dotnet]
format = '(via [$symbol($version )(🎯 $tfm )]($style))'

[elixir]
format = '(via [$symbol($version \(OTP $otp_version\) )]($style))'
symbol = " "

[elm]
format = '(via [$symbol($version )]($style))'
symbol = " "

[erlang]
format = '(via [$symbol($version )]($style))'

[fennel]
format = '(via [$symbol($version )]($style))'
symbol = " "

[fossil_branch]
symbol = " "

[git_branch]
symbol = " "

[gleam]
format = '(via [$symbol($version )]($style))'

[golang]
format = '(via [$symbol($version )]($style))'
symbol = " "

[guix_shell]
symbol = " "

[haskell]
format = '(via [$symbol($version )]($style))'
symbol = " "

[haxe]
symbol = " "

[helm]
format = '(via [$symbol($version )]($style))'

[hg_branch]
symbol = " "

[hostname]
ssh_symbol = " "

[java]
format = '(via [$symbol($version )]($style))'
symbol = " "

[julia]
format = '(via [$symbol($version )]($style))'
symbol = " "

[kotlin]
format = '(via [$symbol($version )]($style))'
symbol = " "

[lua]
format = '(via [$symbol($version )]($style))'
symbol = " "

[memory_usage]
symbol = "󰍛 "

[meson]
symbol = "󰔷 "

[nim]
format = '(via [$symbol($version )]($style))'
symbol = "󰆥 "

[nix_shell]
symbol = " "

[nodejs]
format = '(via [$symbol($version )]($style))'
symbol = " "

[ocaml]
format = '(via [$symbol($version )(\($switch_indicator$switch_name\) )]($style))'
symbol = " "

[opa]
format = '(via [$symbo($version ]($style))"'

[os.symbols]
Alpaquita = " "
Alpine = " "
AlmaLinux = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Kali = " "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
RockyLinux = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Void = " "
Windows = "󰍲 "

[package]
format = '(is [$symbol$version]($style) )'
symbol = "󰏗 "

[perl]
format = '(via [$symbol($version )]($style))'
symbol = " "

[php]
format = '(via [$symbol($version )]($style))'
symbol = " "

[pijul_channel]
symbol = " "

[purescript]
format = '(via [$symbol($version )]($style))'

[python]
format = '(via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style))'
symbol = " "

[quarto]
format = '(via [$symbol($version )]($style))'

[raku]
format = '(via [$symbol($version-$vm_version )]($style))'

[red]
format = '(via [$symbol($version )]($style))'

[rlang]
format = '(via [$symbol($version )]($style))'
symbol = "󰟔 "

[ruby]
format = '(via [$symbol($version )]($style))'
symbol = " "

[rust]
format = '(via [$symbol($version )]($style))'
symbol = " "

[scala]
format = '(via [$symbol($version )]($style))'
symbol = " "

[swift]
format = '(via [$symbol($version )]($style))'
symbol = " "

[typst]
format = '(via [$symbol($version )]($style))'

[vagrant]
format = '(via [$symbol($version )]($style))'

[vlang]
format = '(via [$symbol($version )]($style))'

[zig]
format = '(via [$symbol($version )]($style))'
symbol = " "
